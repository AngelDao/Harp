{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.13.1",
    "schemaVersion": 1003,
    "oldestForwardsCompatibleVersion": 1001
  },
  "kind": "Package",
  "canonicalReference": "@liquity/lib-ethers!",
  "docComment": "",
  "name": "@liquity/lib-ethers",
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@liquity/lib-ethers!",
      "name": "",
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStore:class",
          "docComment": "/**\n * Ethers-based {@link @liquity/lib-base#LiquityStore} that updates state whenever there's a new block.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class BlockPolledLiquityStore extends "
            },
            {
              "kind": "Reference",
              "text": "LiquityStore",
              "canonicalReference": "@liquity/lib-base!LiquityStore:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BlockPolledLiquityStoreExtraState",
              "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStoreExtraState:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "BlockPolledLiquityStore",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStore:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `BlockPolledLiquityStore` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(readable: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "readable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStore#connection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connection: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityConnection",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStoreExtraState:interface",
          "docComment": "/**\n * Extra state added to {@link @liquity/lib-base#LiquityStoreState} by {@link BlockPolledLiquityStore}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface BlockPolledLiquityStoreExtraState "
            }
          ],
          "releaseTag": "Public",
          "name": "BlockPolledLiquityStoreExtraState",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStoreExtraState#blockTag:member",
              "docComment": "/**\n * Number of block that the store state was fetched from.\n *\n * @remarks\n *\n * May be undefined when the store state is fetched for the first time.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockTag?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "blockTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStoreState:type",
          "docComment": "/**\n * The type of {@link BlockPolledLiquityStore}'s {@link @liquity/lib-base#LiquityStore.state | state}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type BlockPolledLiquityStoreState = "
            },
            {
              "kind": "Reference",
              "text": "LiquityStoreState",
              "canonicalReference": "@liquity/lib-base!LiquityStoreState:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "BlockPolledLiquityStoreExtraState",
              "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStoreExtraState:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "BlockPolledLiquityStoreState",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface",
          "docComment": "/**\n * Optional parameters taken by {@link ReadableEthersLiquity} functions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EthersCallOverrides "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersCallOverrides",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides#blockTag:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "blockTag?: "
                },
                {
                  "kind": "Reference",
                  "text": "BlockTag",
                  "canonicalReference": "@ethersproject/abstract-provider!BlockTag:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "blockTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!EthersLiquity:class",
          "docComment": "/**\n * Convenience class that combines multiple interfaces of the library in one object.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `EthersLiquity` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EthersLiquity implements "
            },
            {
              "kind": "Reference",
              "text": "ReadableEthersLiquity",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "TransactableLiquity",
              "canonicalReference": "@liquity/lib-base!TransactableLiquity:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersLiquity",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#adjustTrove:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.adjustTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "adjustTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentParams",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "adjustTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#borrowLUSD:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.borrowLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borrowLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "borrowLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#claimCollateralSurplus:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.claimCollateralSurplus}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "claimCollateralSurplus(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "claimCollateralSurplus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#closeTrove:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.closeTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveClosureDetails",
                  "canonicalReference": "@liquity/lib-base!TroveClosureDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "closeTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity.connect:member(2)",
              "docComment": "/**\n * Connect to the Liquity protocol and create an `EthersLiquity` object.\n *\n * @param signerOrProvider - Ethers `Signer` or `Provider` to use for connecting to the Ethereum network.\n *\n * @param optionalParams - Optional parameters that can be used to customize the connection.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(signerOrProvider: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersSigner",
                  "canonicalReference": "@liquity/lib-ethers!EthersSigner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EthersProvider",
                  "canonicalReference": "@liquity/lib-ethers!EthersProvider:type"
                },
                {
                  "kind": "Content",
                  "text": ", optionalParams?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityConnectionOptionalParams",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "signerOrProvider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "optionalParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "connect"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#connection:member",
              "docComment": "/**\n * Information about the connection to the Liquity protocol.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connection: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityConnection",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#depositCollateral:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "depositCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#depositLUSDInStabilityPool:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.depositLUSDInStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositLUSDInStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", frontendTag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "frontendTag",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "depositLUSDInStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getCollateralSurplusBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCollateralSurplusBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getCollateralSurplusBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getFees:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFees(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Fees",
                  "canonicalReference": "@liquity/lib-base!Fees:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getFees"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getFrontendStatus:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFrontendStatus(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FrontendStatus",
                  "canonicalReference": "@liquity/lib-base!FrontendStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getFrontendStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getLQTYBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLQTYBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLQTYBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getLQTYStake:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLQTYStake(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LQTYStake",
                  "canonicalReference": "@liquity/lib-base!LQTYStake:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLQTYStake"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getLUSDBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLUSDBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLUSDBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getLUSDInStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLUSDInStabilityPool(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getLUSDInStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getNumberOfTroves:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNumberOfTroves(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getNumberOfTroves"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getPrice:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPrice(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getPrice"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getStabilityDeposit:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStabilityDeposit(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDeposit",
                  "canonicalReference": "@liquity/lib-base!StabilityDeposit:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getStabilityDeposit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTotal:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotal(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Trove",
                  "canonicalReference": "@liquity/lib-base!Trove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTotalRedistributed:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotalRedistributed(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Trove",
                  "canonicalReference": "@liquity/lib-base!Trove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotalRedistributed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTotalStakedLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotalStakedLQTY(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotalStakedLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTrove(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserTrove",
                  "canonicalReference": "@liquity/lib-base!UserTrove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTroveBeforeRedistribution:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTroveBeforeRedistribution(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveWithPendingRedistribution",
                  "canonicalReference": "@liquity/lib-base!TroveWithPendingRedistribution:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTroveBeforeRedistribution"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#getTroves:member(2)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.(getTroves:2)}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTroves(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveListingParams",
                  "canonicalReference": "@liquity/lib-base!TroveListingParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserTrove",
                  "canonicalReference": "@liquity/lib-base!UserTrove:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTroves"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#hasStore:member(1)",
              "docComment": "/**\n * Check whether this `EthersLiquity` is an {@link EthersLiquityWithStore}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasStore(): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityWithStore",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityWithStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "hasStore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#hasStore:member(2)",
              "docComment": "/**\n * Check whether this `EthersLiquity` is an {@link EthersLiquityWithStore}\\<{@link BlockPolledLiquityStore}\\>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasStore(store: "
                },
                {
                  "kind": "Content",
                  "text": "\"blockPolled\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityWithStore",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityWithStore:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BlockPolledLiquityStore",
                  "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStore:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "store",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "hasStore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#liquidate:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidate}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidate(address: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#liquidateUpTo:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.liquidateUpTo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidateUpTo(maximumNumberOfTrovesToLiquidate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maximumNumberOfTrovesToLiquidate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidateUpTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#openTrove:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.openTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationParams",
                  "canonicalReference": "@liquity/lib-base!TroveCreationParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationDetails",
                  "canonicalReference": "@liquity/lib-base!TroveCreationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "openTrove"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#populate:member",
              "docComment": "/**\n * Can be used to create populated (unsigned) transactions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly populate: "
                },
                {
                  "kind": "Reference",
                  "text": "PopulatableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "populate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#redeemLUSD:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.redeemLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeemLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxRedemptionRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RedemptionDetails",
                  "canonicalReference": "@liquity/lib-base!RedemptionDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxRedemptionRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "redeemLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#registerFrontend:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.registerFrontend}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerFrontend(kickbackRate: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kickbackRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "registerFrontend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#repayLUSD:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.repayLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "repayLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "repayLUSD"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#send:member",
              "docComment": "/**\n * Can be used to send transactions without waiting for them to be mined.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly send: "
                },
                {
                  "kind": "Reference",
                  "text": "SendableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "send",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#sendLQTY:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLQTY(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#sendLUSD:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.sendLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLUSD(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#stakeLQTY:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.stakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "stakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#transferCollateralGainToTrove:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.transferCollateralGainToTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transferCollateralGainToTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollateralGainTransferDetails",
                  "canonicalReference": "@liquity/lib-base!CollateralGainTransferDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "transferCollateralGainToTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#unstakeLQTY:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.unstakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unstakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "unstakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#withdrawCollateral:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#withdrawGainsFromStabilityPool:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStabilityPool(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityPoolGainsWithdrawalDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityPoolGainsWithdrawalDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#withdrawGainsFromStaking:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawGainsFromStaking}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStaking(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<void>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStaking"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity#withdrawLUSDFromStabilityPool:member(1)",
              "docComment": "/**\n * @throws\n *\n * Throws {@link EthersTransactionFailedError} in case of transaction failure.\n * {@inheritDoc @liquity/lib-base#TransactableLiquity.withdrawLUSDFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawLUSDFromStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawLUSDFromStabilityPool"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 2
            },
            {
              "startIndex": 3,
              "endIndex": 5
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection:interface",
          "docComment": "/**\n * Information about a connection to the Liquity protocol.\n *\n * @remarks\n *\n * Provided for debugging / informational purposes.\n *\n * Exposed through {@link ReadableEthersLiquity.connection} and {@link EthersLiquity.connection}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EthersLiquityConnection extends "
            },
            {
              "kind": "Reference",
              "text": "EthersLiquityConnectionOptionalParams",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersLiquityConnection",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#addresses:member",
              "docComment": "/**\n * A mapping of Liquity contracts' names to their addresses.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly addresses: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, string>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "addresses",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#chainId:member",
              "docComment": "/**\n * Chain ID of the connected network.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly chainId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chainId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#deploymentDate:member",
              "docComment": "/**\n * Date when the Liquity contracts were deployed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly deploymentDate: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "deploymentDate",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#provider:member",
              "docComment": "/**\n * Ethers `Provider` used for connecting to the network.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly provider: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersProvider",
                  "canonicalReference": "@liquity/lib-ethers!EthersProvider:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "provider",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#signer:member",
              "docComment": "/**\n * Ethers `Signer` used for sending transactions.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly signer?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersSigner",
                  "canonicalReference": "@liquity/lib-ethers!EthersSigner:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "signer",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection#version:member",
              "docComment": "/**\n * Version of the Liquity contracts (Git commit hash).\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly version: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams:interface",
          "docComment": "/**\n * Optional parameters of {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EthersLiquityConnectionOptionalParams "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersLiquityConnectionOptionalParams",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams#frontendTag:member",
              "docComment": "/**\n * Address that will receive LQTY rewards from newly created Stability Deposits by default.\n *\n * @remarks\n *\n * For example {@link EthersLiquity.depositLUSDInStabilityPool | depositLUSDInStabilityPool(amount, frontendTag?)} will tag newly made Stability Deposits with this address when its `frontendTag` parameter is omitted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly frontendTag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "frontendTag",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams#userAddress:member",
              "docComment": "/**\n * Address whose Trove, Stability Deposit, LQTY Stake and balances will be read by default.\n *\n * @remarks\n *\n * For example {@link EthersLiquity.getTrove | getTrove(address?)} will return the Trove owned by `userAddress` when the `address` parameter is omitted.\n *\n * Should be omitted when connecting through a {@link EthersSigner | Signer}. Instead `userAddress` will be automatically determined from the `Signer`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly userAddress?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "userAddress",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams#useStore:member",
              "docComment": "/**\n * Create a {@link @liquity/lib-base#LiquityStore} and expose it as the `store` property.\n *\n * @remarks\n *\n * When set to one of the available {@link EthersLiquityStoreOption | options}, {@link ReadableEthersLiquity.(connect:2) | ReadableEthersLiquity.connect()} will return a {@link ReadableEthersLiquityWithStore}, while {@link EthersLiquity.(connect:2) | EthersLiquity.connect()} will return an {@link EthersLiquityWithStore}.\n *\n * Note that the store won't start monitoring the blockchain until its {@link @liquity/lib-base#LiquityStore.start | start()} function is called.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly useStore?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityStoreOption",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityStoreOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "useStore",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersLiquityStoreOption:type",
          "docComment": "/**\n * Possible values for the optional {@link EthersLiquityConnectionOptionalParams.useStore | useStore} connection parameter.\n *\n * @remarks\n *\n * Currently, the only supported value is `\"blockPolled\"`, in which case a {@link BlockPolledLiquityStore} will be created.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersLiquityStoreOption = "
            },
            {
              "kind": "Content",
              "text": "\"blockPolled\""
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersLiquityStoreOption",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!EthersLiquityWithStore:interface",
          "docComment": "/**\n * Variant of {@link EthersLiquity} that exposes a {@link @liquity/lib-base#LiquityStore}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EthersLiquityWithStore<T extends "
            },
            {
              "kind": "Reference",
              "text": "LiquityStore",
              "canonicalReference": "@liquity/lib-base!LiquityStore:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "LiquityStore",
              "canonicalReference": "@liquity/lib-base!LiquityStore:class"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "EthersLiquity",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquity:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "EthersLiquityWithStore",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersLiquityWithStore#store:member",
              "docComment": "/**\n * An object that implements LiquityStore.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersPopulatedTransaction:type",
          "docComment": "/**\n * Alias of Ethers' `PopulatedTransaction` type, which implements {@link https://docs.ethers.io/v5/api/utils/transactions/#UnsignedTransaction | UnsignedTransaction}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersPopulatedTransaction = "
            },
            {
              "kind": "Reference",
              "text": "PopulatedTransaction",
              "canonicalReference": "@ethersproject/contracts!PopulatedTransaction:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersPopulatedTransaction",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersProvider:type",
          "docComment": "/**\n * Alias of Ethers' abstract {@link https://docs.ethers.io/v5/api/providers/ | Provider} type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersProvider = "
            },
            {
              "kind": "Reference",
              "text": "Provider",
              "canonicalReference": "@ethersproject/abstract-provider!Provider:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersProvider",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersSigner:type",
          "docComment": "/**\n * Alias of Ethers' abstract {@link https://docs.ethers.io/v5/api/signer/ | Signer} type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersSigner = "
            },
            {
              "kind": "Reference",
              "text": "Signer",
              "canonicalReference": "@ethersproject/abstract-signer!Signer:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersSigner",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!EthersTransactionFailedError:class",
          "docComment": "/**\n * Thrown by {@link EthersLiquity} in case of transaction failure.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class EthersTransactionFailedError extends "
            },
            {
              "kind": "Reference",
              "text": "TransactionFailedError",
              "canonicalReference": "@liquity/lib-base!TransactionFailedError:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FailedReceipt",
              "canonicalReference": "@liquity/lib-base!FailedReceipt:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionReceipt",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
            },
            {
              "kind": "Content",
              "text": ">> "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersTransactionFailedError",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionFailedError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `EthersTransactionFailedError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", failedReceipt: "
                },
                {
                  "kind": "Reference",
                  "text": "FailedReceipt",
                  "canonicalReference": "@liquity/lib-base!FailedReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionReceipt",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "failedReceipt",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  }
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface",
          "docComment": "/**\n * Optional parameters taken by {@link EthersLiquity} transaction functions.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface EthersTransactionOverrides "
            }
          ],
          "releaseTag": "Public",
          "name": "EthersTransactionOverrides",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides#from:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "from?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "from",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides#gasLimit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gasLimit?: "
                },
                {
                  "kind": "Reference",
                  "text": "BigNumberish",
                  "canonicalReference": "@ethersproject/bignumber!BigNumberish:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gasLimit",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides#gasPrice:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "gasPrice?: "
                },
                {
                  "kind": "Reference",
                  "text": "BigNumberish",
                  "canonicalReference": "@ethersproject/bignumber!BigNumberish:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "gasPrice",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides#nonce:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "nonce?: "
                },
                {
                  "kind": "Reference",
                  "text": "BigNumberish",
                  "canonicalReference": "@ethersproject/bignumber!BigNumberish:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": true,
              "releaseTag": "Public",
              "name": "nonce",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type",
          "docComment": "/**\n * Alias of Ethers' {@link https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt | TransactionReceipt} type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersTransactionReceipt = "
            },
            {
              "kind": "Reference",
              "text": "TransactionReceipt",
              "canonicalReference": "@ethersproject/abstract-provider!TransactionReceipt:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersTransactionReceipt",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type",
          "docComment": "/**\n * Alias of Ethers' {@link https://docs.ethers.io/v5/api/providers/types/#providers-TransactionResponse | TransactionResponse} type.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare type EthersTransactionResponse = "
            },
            {
              "kind": "Reference",
              "text": "TransactionResponse",
              "canonicalReference": "@ethersproject/abstract-provider!TransactionResponse:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "EthersTransactionResponse",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity:class",
          "docComment": "/**\n * Ethers-based implementation of {@link @liquity/lib-base#PopulatableLiquity}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PopulatableEthersLiquity implements "
            },
            {
              "kind": "Reference",
              "text": "PopulatableLiquity",
              "canonicalReference": "@liquity/lib-base!PopulatableLiquity:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionReceipt",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionResponse",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EthersPopulatedTransaction",
              "canonicalReference": "@liquity/lib-ethers!EthersPopulatedTransaction:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "PopulatableEthersLiquity",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PopulatableEthersLiquity` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(readable: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "readable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#adjustTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.adjustTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "adjustTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentParams",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "adjustTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#borrowLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.borrowLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borrowLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "borrowLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#claimCollateralSurplus:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.claimCollateralSurplus}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "claimCollateralSurplus(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "claimCollateralSurplus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#closeTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.closeTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveClosureDetails",
                  "canonicalReference": "@liquity/lib-base!TroveClosureDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "closeTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#depositCollateral:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "depositCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#depositLUSDInStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.depositLUSDInStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositLUSDInStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", frontendTag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "frontendTag",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "depositLUSDInStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#liquidate:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidate}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidate(address: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#liquidateUpTo:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.liquidateUpTo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidateUpTo(maximumNumberOfTrovesToLiquidate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maximumNumberOfTrovesToLiquidate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidateUpTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#openTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.openTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationParams",
                  "canonicalReference": "@liquity/lib-base!TroveCreationParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationDetails",
                  "canonicalReference": "@liquity/lib-base!TroveCreationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "openTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#redeemLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.redeemLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeemLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxRedemptionRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersRedemption",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxRedemptionRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "redeemLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#registerFrontend:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.registerFrontend}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerFrontend(kickbackRate: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kickbackRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "registerFrontend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#repayLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.repayLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "repayLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "repayLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#sendLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLQTY(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#sendLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.sendLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLUSD(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#stakeLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.stakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "stakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#transferCollateralGainToTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.transferCollateralGainToTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transferCollateralGainToTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollateralGainTransferDetails",
                  "canonicalReference": "@liquity/lib-base!CollateralGainTransferDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "transferCollateralGainToTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#unstakeLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.unstakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unstakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "unstakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#withdrawCollateral:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#withdrawGainsFromStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStabilityPool(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityPoolGainsWithdrawalDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityPoolGainsWithdrawalDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#withdrawGainsFromStaking:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawGainsFromStaking}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStaking(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStaking"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity#withdrawLUSDFromStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatableLiquity.withdrawLUSDFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawLUSDFromStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawLUSDFromStabilityPool"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class",
          "docComment": "/**\n * A transaction that has been prepared for sending.\n *\n * @remarks\n *\n * Returned by {@link PopulatableEthersLiquity} functions.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `PopulatedEthersLiquityTransaction` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PopulatedEthersLiquityTransaction<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "PopulatedLiquityTransaction",
              "canonicalReference": "@liquity/lib-base!PopulatedLiquityTransaction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersPopulatedTransaction",
              "canonicalReference": "@liquity/lib-ethers!EthersPopulatedTransaction:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SentEthersLiquityTransaction",
              "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
            },
            {
              "kind": "Content",
              "text": "<T>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "PopulatedEthersLiquityTransaction",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction#rawPopulatedTransaction:member",
              "docComment": "/**\n * Unsigned transaction object populated by Ethers.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rawPopulatedTransaction: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersPopulatedTransaction",
                  "canonicalReference": "@liquity/lib-ethers!EthersPopulatedTransaction:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawPopulatedTransaction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction#send:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatedLiquityTransaction.send}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "send(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "send"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 9
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption:class",
          "docComment": "/**\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `PopulatedEthersRedemption` class.\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption}\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PopulatedEthersRedemption extends "
            },
            {
              "kind": "Reference",
              "text": "PopulatedEthersLiquityTransaction",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersLiquityTransaction:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RedemptionDetails",
              "canonicalReference": "@liquity/lib-base!RedemptionDetails:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            },
            {
              "kind": "Content",
              "text": "implements "
            },
            {
              "kind": "Reference",
              "text": "PopulatedRedemption",
              "canonicalReference": "@liquity/lib-base!PopulatedRedemption:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersPopulatedTransaction",
              "canonicalReference": "@liquity/lib-ethers!EthersPopulatedTransaction:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionResponse",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionReceipt",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "PopulatedEthersRedemption",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption#attemptedLUSDAmount:member",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption.attemptedLUSDAmount}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly attemptedLUSDAmount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "attemptedLUSDAmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption#increaseAmountByMinimumNetDebt:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption.increaseAmountByMinimumNetDebt}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "increaseAmountByMinimumNetDebt(maxRedemptionRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "PopulatedEthersRedemption",
                  "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maxRedemptionRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "increaseAmountByMinimumNetDebt"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption#isTruncated:member",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption.isTruncated}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly isTruncated: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "isTruncated",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!PopulatedEthersRedemption#redeemableLUSDAmount:member",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#PopulatedRedemption.redeemableLUSDAmount}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly redeemableLUSDAmount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "redeemableLUSDAmount",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 5
          },
          "implementsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 14
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class",
          "docComment": "/**\n * Ethers-based implementation of {@link @liquity/lib-base#ReadableLiquity}.\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `ReadableEthersLiquity` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class ReadableEthersLiquity implements "
            },
            {
              "kind": "Reference",
              "text": "ReadableLiquity",
              "canonicalReference": "@liquity/lib-base!ReadableLiquity:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "ReadableEthersLiquity",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity.connect:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static connect(signerOrProvider: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersSigner",
                  "canonicalReference": "@liquity/lib-ethers!EthersSigner:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "EthersProvider",
                  "canonicalReference": "@liquity/lib-ethers!EthersProvider:type"
                },
                {
                  "kind": "Content",
                  "text": ", optionalParams?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityConnectionOptionalParams",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnectionOptionalParams:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ReadableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "signerOrProvider",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "optionalParams",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "connect"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#connection:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly connection: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersLiquityConnection",
                  "canonicalReference": "@liquity/lib-ethers!EthersLiquityConnection:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "connection",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getCollateralSurplusBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getCollateralSurplusBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getCollateralSurplusBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getCollateralSurplusBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getFees:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getFees}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFees(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Fees",
                  "canonicalReference": "@liquity/lib-base!Fees:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getFees"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getFrontendStatus:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getFrontendStatus}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getFrontendStatus(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "FrontendStatus",
                  "canonicalReference": "@liquity/lib-base!FrontendStatus:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getFrontendStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getLQTYBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLQTYBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLQTYBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getLQTYStake:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLQTYStake}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLQTYStake(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LQTYStake",
                  "canonicalReference": "@liquity/lib-base!LQTYStake:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLQTYStake"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getLUSDBalance:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDBalance}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLUSDBalance(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getLUSDBalance"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getLUSDInStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getLUSDInStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getLUSDInStabilityPool(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getLUSDInStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getNumberOfTroves:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getNumberOfTroves}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getNumberOfTroves(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<number>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getNumberOfTroves"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getPrice:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getPrice}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getPrice(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getPrice"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getStabilityDeposit:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getStabilityDeposit}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getStabilityDeposit(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDeposit",
                  "canonicalReference": "@liquity/lib-base!StabilityDeposit:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getStabilityDeposit"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTotal:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotal}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotal(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Trove",
                  "canonicalReference": "@liquity/lib-base!Trove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotal"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTotalRedistributed:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalRedistributed}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotalRedistributed(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Trove",
                  "canonicalReference": "@liquity/lib-base!Trove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotalRedistributed"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTotalStakedLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTotalStakedLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTotalStakedLQTY(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimal",
                  "canonicalReference": "@liquity/lib-base!Decimal:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "getTotalStakedLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTrove(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserTrove",
                  "canonicalReference": "@liquity/lib-base!UserTrove:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTroveBeforeRedistribution:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.getTroveBeforeRedistribution}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTroveBeforeRedistribution(address?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveWithPendingRedistribution",
                  "canonicalReference": "@liquity/lib-base!TroveWithPendingRedistribution:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTroveBeforeRedistribution"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#getTroves:member(2)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#ReadableLiquity.(getTroves:2)}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getTroves(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveListingParams",
                  "canonicalReference": "@liquity/lib-base!TroveListingParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersCallOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersCallOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "UserTrove",
                  "canonicalReference": "@liquity/lib-base!UserTrove:class"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "getTroves"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#hasStore:member(1)",
              "docComment": "/**\n * Check whether this `ReadableEthersLiquity` is a {@link ReadableEthersLiquityWithStore}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasStore(): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "ReadableEthersLiquityWithStore",
                  "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquityWithStore:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "hasStore"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity#hasStore:member(2)",
              "docComment": "/**\n * Check whether this `ReadableEthersLiquity` is a {@link ReadableEthersLiquityWithStore}\\<{@link BlockPolledLiquityStore}\\>.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasStore(store: "
                },
                {
                  "kind": "Content",
                  "text": "\"blockPolled\""
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "ReadableEthersLiquityWithStore",
                  "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquityWithStore:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BlockPolledLiquityStore",
                  "canonicalReference": "@liquity/lib-ethers!BlockPolledLiquityStore:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "store",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "hasStore"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 3
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquityWithStore:interface",
          "docComment": "/**\n * Variant of {@link ReadableEthersLiquity} that exposes a {@link @liquity/lib-base#LiquityStore}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ReadableEthersLiquityWithStore<T extends "
            },
            {
              "kind": "Reference",
              "text": "LiquityStore",
              "canonicalReference": "@liquity/lib-base!LiquityStore:class"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Content",
              "text": "= "
            },
            {
              "kind": "Reference",
              "text": "LiquityStore",
              "canonicalReference": "@liquity/lib-base!LiquityStore:class"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ReadableEthersLiquity",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquity:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "defaultTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              }
            }
          ],
          "name": "ReadableEthersLiquityWithStore",
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@liquity/lib-ethers!ReadableEthersLiquityWithStore#store:member",
              "docComment": "/**\n * An object that implements LiquityStore.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly store: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "store",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 6,
              "endIndex": 8
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity:class",
          "docComment": "/**\n * Ethers-based implementation of {@link @liquity/lib-base#SendableLiquity}.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SendableEthersLiquity implements "
            },
            {
              "kind": "Reference",
              "text": "SendableLiquity",
              "canonicalReference": "@liquity/lib-base!SendableLiquity:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionReceipt",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionResponse",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SendableEthersLiquity",
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SendableEthersLiquity` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(populatable: "
                },
                {
                  "kind": "Reference",
                  "text": "PopulatableEthersLiquity",
                  "canonicalReference": "@liquity/lib-ethers!PopulatableEthersLiquity:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "populatable",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#adjustTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.adjustTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "adjustTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentParams",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "adjustTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#borrowLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.borrowLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "borrowLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "borrowLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#claimCollateralSurplus:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.claimCollateralSurplus}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "claimCollateralSurplus(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "claimCollateralSurplus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#closeTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.closeTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "closeTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveClosureDetails",
                  "canonicalReference": "@liquity/lib-base!TroveClosureDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "closeTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#depositCollateral:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.depositCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "depositCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#depositLUSDInStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.depositLUSDInStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "depositLUSDInStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", frontendTag?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "frontendTag",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "depositLUSDInStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#liquidate:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.liquidate}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidate(address: "
                },
                {
                  "kind": "Content",
                  "text": "string | string[]"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "address",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidate"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#liquidateUpTo:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.liquidateUpTo}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "liquidateUpTo(maximumNumberOfTrovesToLiquidate: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquidationDetails",
                  "canonicalReference": "@liquity/lib-base!LiquidationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maximumNumberOfTrovesToLiquidate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "liquidateUpTo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#openTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.openTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "openTrove(params: "
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationParams",
                  "canonicalReference": "@liquity/lib-base!TroveCreationParams:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ", maxBorrowingRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveCreationDetails",
                  "canonicalReference": "@liquity/lib-base!TroveCreationDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "params",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 5
                  }
                },
                {
                  "parameterName": "maxBorrowingRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 6,
                    "endIndex": 7
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  }
                }
              ],
              "name": "openTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#redeemLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.redeemLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "redeemLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", maxRedemptionRate?: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RedemptionDetails",
                  "canonicalReference": "@liquity/lib-base!RedemptionDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "maxRedemptionRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "redeemLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#registerFrontend:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.registerFrontend}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "registerFrontend(kickbackRate: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "kickbackRate",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "registerFrontend"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#repayLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.repayLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "repayLUSD(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "repayLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#sendLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.sendLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLQTY(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#sendLUSD:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.sendLUSD}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sendLUSD(toAddress: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "toAddress",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  }
                }
              ],
              "name": "sendLUSD"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#stakeLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.stakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "stakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "stakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#transferCollateralGainToTrove:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.transferCollateralGainToTrove}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "transferCollateralGainToTrove(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "CollateralGainTransferDetails",
                  "canonicalReference": "@liquity/lib-base!CollateralGainTransferDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "transferCollateralGainToTrove"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#unstakeLQTY:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.unstakeLQTY}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "unstakeLQTY(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "unstakeLQTY"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#withdrawCollateral:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawCollateral}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawCollateral(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "TroveAdjustmentDetails",
                  "canonicalReference": "@liquity/lib-base!TroveAdjustmentDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawCollateral"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#withdrawGainsFromStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStabilityPool(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityPoolGainsWithdrawalDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityPoolGainsWithdrawalDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStabilityPool"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#withdrawGainsFromStaking:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawGainsFromStaking}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawGainsFromStaking(overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<void>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                }
              ],
              "name": "withdrawGainsFromStaking"
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SendableEthersLiquity#withdrawLUSDFromStabilityPool:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SendableLiquity.withdrawLUSDFromStabilityPool}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "withdrawLUSDFromStabilityPool(amount: "
                },
                {
                  "kind": "Reference",
                  "text": "Decimalish",
                  "canonicalReference": "@liquity/lib-base!Decimalish:type"
                },
                {
                  "kind": "Content",
                  "text": ", overrides?: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionOverrides",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionOverrides:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SentEthersLiquityTransaction",
                  "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StabilityDepositChangeDetails",
                  "canonicalReference": "@liquity/lib-base!StabilityDepositChangeDetails:interface"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  }
                },
                {
                  "parameterName": "overrides",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  }
                }
              ],
              "name": "withdrawLUSDFromStabilityPool"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 1,
              "endIndex": 7
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction:class",
          "docComment": "/**\n * A transaction that has already been sent.\n *\n * @remarks\n *\n * Returned by {@link SendableEthersLiquity} functions.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `SentEthersLiquityTransaction` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SentEthersLiquityTransaction<T = "
            },
            {
              "kind": "Content",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "SentLiquityTransaction",
              "canonicalReference": "@liquity/lib-base!SentLiquityTransaction:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionResponse",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "LiquityReceipt",
              "canonicalReference": "@liquity/lib-base!LiquityReceipt:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EthersTransactionReceipt",
              "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
            },
            {
              "kind": "Content",
              "text": ", T>> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "name": "SentEthersLiquityTransaction",
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction#getReceipt:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SentLiquityTransaction.getReceipt}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "getReceipt(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "LiquityReceipt",
                  "canonicalReference": "@liquity/lib-base!LiquityReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionReceipt",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": ", T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "getReceipt"
            },
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction#rawSentTransaction:member",
              "docComment": "/**\n * Ethers' representation of a sent transaction.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly rawSentTransaction: "
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionResponse",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionResponse:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawSentTransaction",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@liquity/lib-ethers!SentEthersLiquityTransaction#waitForReceipt:member(1)",
              "docComment": "/**\n * {@inheritDoc @liquity/lib-base#SentLiquityTransaction.waitForReceipt}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "waitForReceipt(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "MinedReceipt",
                  "canonicalReference": "@liquity/lib-base!MinedReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "EthersTransactionReceipt",
                  "canonicalReference": "@liquity/lib-ethers!EthersTransactionReceipt:type"
                },
                {
                  "kind": "Content",
                  "text": ", T>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "waitForReceipt"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 11
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@liquity/lib-ethers!UnsupportedNetworkError:class",
          "docComment": "/**\n * Thrown when trying to connect to a network where Liquity is not deployed.\n *\n * @remarks\n *\n * Thrown by {@link ReadableEthersLiquity.(connect:2)} and {@link EthersLiquity.(connect:2)}.\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `UnsupportedNetworkError` class.\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class UnsupportedNetworkError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "UnsupportedNetworkError",
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@liquity/lib-ethers!UnsupportedNetworkError#chainId:member",
              "docComment": "/**\n * Chain ID of the unsupported network.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly chainId: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isOptional": false,
              "releaseTag": "Public",
              "name": "chainId",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 3
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
