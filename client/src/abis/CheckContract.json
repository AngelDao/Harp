{
  "contractName": "CheckContract",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/dannywarrick/code/harp/client/src/contracts/Dependencies/CheckContract.sol\":\"CheckContract\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dannywarrick/code/harp/client/src/contracts/Dependencies/CheckContract.sol\":{\"keccak256\":\"0x9e7b3a13a2e59c25be87d369d8536e842736ee623960196d21afa9b62ceb25a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9a7442575644fd3ad998757b5487e5786d06757c9775ae9084530491066bdc8\",\"dweb:/ipfs/QmbdH7yPunKJ5cqjrHPdqFeayYY8GGwcSC9aG1pvmTsAHE\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220c678dfa4564ed06bff9f64a02fe57890605129ffc5096d4139e5d3ee2993e10964736f6c63430007060033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220c678dfa4564ed06bff9f64a02fe57890605129ffc5096d4139e5d3ee2993e10964736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "66:585:2:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "66:585:2:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\ncontract CheckContract {\n    /**\n     * Check that the account is an already deployed non-destroyed contract.\n     * See: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol#L12\n     */\n    function checkContract(address _account) internal view {\n        require(_account != address(0), \"Account cannot be zero address\");\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            size := extcodesize(_account)\n        }\n        require(size > 0, \"Account code size cannot be zero\");\n    }\n}\n",
  "sourcePath": "/Users/dannywarrick/code/harp/client/src/contracts/Dependencies/CheckContract.sol",
  "ast": {
    "absolutePath": "/Users/dannywarrick/code/harp/client/src/contracts/Dependencies/CheckContract.sol",
    "exportedSymbols": {
      "CheckContract": [
        82
      ]
    },
    "id": 83,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 53,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 82,
        "linearizedBaseContracts": [
          82
        ],
        "name": "CheckContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 80,
              "nodeType": "Block",
              "src": "354:295:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 60,
                          "name": "_account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "372:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 63,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "392:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 62,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "384:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 61,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "384:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "384:10:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "372:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e742063616e6e6f74206265207a65726f2061646472657373",
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "396:32:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71630fb59e6335519b5c714c347f2b3d00653f9607ebc84cc566a5b693547569",
                          "typeString": "literal_string \"Account cannot be zero address\""
                        },
                        "value": "Account cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71630fb59e6335519b5c714c347f2b3d00653f9607ebc84cc566a5b693547569",
                          "typeString": "literal_string \"Account cannot be zero address\""
                        }
                      ],
                      "id": 59,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "364:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:65:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "364:65:2"
                },
                {
                  "assignments": [
                    70
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 80,
                      "src": "440:12:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "440:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "440:12:2"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "527:53:2",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "541:29:2",
                        "value": {
                          "arguments": [
                            {
                              "name": "_account",
                              "nodeType": "YulIdentifier",
                              "src": "561:8:2"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nodeType": "YulIdentifier",
                            "src": "549:11:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "549:21:2"
                        },
                        "variableNames": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "541:4:2"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "petersburg",
                  "externalReferences": [
                    {
                      "declaration": 56,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "561:8:2",
                      "valueSize": 1
                    },
                    {
                      "declaration": 70,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "541:4:2",
                      "valueSize": 1
                    }
                  ],
                  "id": 72,
                  "nodeType": "InlineAssembly",
                  "src": "518:62:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74,
                          "name": "size",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70,
                          "src": "597:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "604:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "597:8:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4163636f756e7420636f64652073697a652063616e6e6f74206265207a65726f",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "607:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dcf7beb71f973a2a4b4f293fe67c3b380ce91c14fb11529cf06f13e17f4fde3b",
                          "typeString": "literal_string \"Account code size cannot be zero\""
                        },
                        "value": "Account code size cannot be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dcf7beb71f973a2a4b4f293fe67c3b380ce91c14fb11529cf06f13e17f4fde3b",
                          "typeString": "literal_string \"Account code size cannot be zero\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "589:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "589:53:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "589:53:2"
                }
              ]
            },
            "documentation": {
              "id": 54,
              "nodeType": "StructuredDocumentation",
              "src": "95:199:2",
              "text": " Check that the account is an already deployed non-destroyed contract.\n See: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol#L12"
            },
            "id": 81,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "mutability": "mutable",
                  "name": "_account",
                  "nodeType": "VariableDeclaration",
                  "scope": 81,
                  "src": "322:16:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "321:18:2"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:0:2"
            },
            "scope": 82,
            "src": "299:350:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 83,
        "src": "66:585:2"
      }
    ],
    "src": "33:619:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/dannywarrick/code/harp/client/src/contracts/Dependencies/CheckContract.sol",
      "exportedSymbols": {
        "CheckContract": [
          82
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 53,
        "name": "PragmaDirective",
        "src": "33:31:2"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            82
          ],
          "name": "CheckContract",
          "scope": 83
        },
        "children": [
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "checkContract",
              "scope": 82,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " Check that the account is an already deployed non-destroyed contract.\n See: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol#L12"
                },
                "id": 54,
                "name": "StructuredDocumentation",
                "src": "95:199:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_account",
                      "scope": 81,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 55,
                        "name": "ElementaryTypeName",
                        "src": "322:7:2"
                      }
                    ],
                    "id": 56,
                    "name": "VariableDeclaration",
                    "src": "322:16:2"
                  }
                ],
                "id": 57,
                "name": "ParameterList",
                "src": "321:18:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 58,
                "name": "ParameterList",
                "src": "354:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_71630fb59e6335519b5c714c347f2b3d00653f9607ebc84cc566a5b693547569",
                                  "typeString": "literal_string \"Account cannot be zero address\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 59,
                            "name": "Identifier",
                            "src": "364:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "address",
                                  "value": "_account"
                                },
                                "id": 60,
                                "name": "Identifier",
                                "src": "372:8:2"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address"
                                        },
                                        "id": 61,
                                        "name": "ElementaryTypeName",
                                        "src": "384:7:2"
                                      }
                                    ],
                                    "id": 62,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "384:7:2"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 63,
                                    "name": "Literal",
                                    "src": "392:1:2"
                                  }
                                ],
                                "id": 64,
                                "name": "FunctionCall",
                                "src": "384:10:2"
                              }
                            ],
                            "id": 65,
                            "name": "BinaryOperation",
                            "src": "372:22:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4163636f756e742063616e6e6f74206265207a65726f2061646472657373",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Account cannot be zero address\"",
                              "value": "Account cannot be zero address"
                            },
                            "id": 66,
                            "name": "Literal",
                            "src": "396:32:2"
                          }
                        ],
                        "id": 67,
                        "name": "FunctionCall",
                        "src": "364:65:2"
                      }
                    ],
                    "id": 68,
                    "name": "ExpressionStatement",
                    "src": "364:65:2"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        70
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "size",
                          "scope": 80,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 69,
                            "name": "ElementaryTypeName",
                            "src": "440:7:2"
                          }
                        ],
                        "id": 70,
                        "name": "VariableDeclaration",
                        "src": "440:12:2"
                      }
                    ],
                    "id": 71,
                    "name": "VariableDeclarationStatement",
                    "src": "440:12:2"
                  },
                  {
                    "attributes": {
                      "evmVersion": "petersburg",
                      "externalReferences": [
                        {
                          "declaration": 56,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "561:8:2",
                          "valueSize": 1
                        },
                        {
                          "declaration": 70,
                          "isOffset": false,
                          "isSlot": false,
                          "src": "541:4:2",
                          "valueSize": 1
                        }
                      ],
                      "operations": "{ size := extcodesize(_account) }"
                    },
                    "children": [],
                    "id": 72,
                    "name": "InlineAssembly",
                    "src": "518:62:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_dcf7beb71f973a2a4b4f293fe67c3b380ce91c14fb11529cf06f13e17f4fde3b",
                                  "typeString": "literal_string \"Account code size cannot be zero\""
                                }
                              ],
                              "overloadedDeclarations": [
                                4294967278,
                                4294967278
                              ],
                              "referencedDeclaration": 4294967278,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "589:7:2"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "uint256",
                                  "value": "size"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "597:4:2"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 75,
                                "name": "Literal",
                                "src": "604:1:2"
                              }
                            ],
                            "id": 76,
                            "name": "BinaryOperation",
                            "src": "597:8:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4163636f756e7420636f64652073697a652063616e6e6f74206265207a65726f",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Account code size cannot be zero\"",
                              "value": "Account code size cannot be zero"
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "607:34:2"
                          }
                        ],
                        "id": 78,
                        "name": "FunctionCall",
                        "src": "589:53:2"
                      }
                    ],
                    "id": 79,
                    "name": "ExpressionStatement",
                    "src": "589:53:2"
                  }
                ],
                "id": 80,
                "name": "Block",
                "src": "354:295:2"
              }
            ],
            "id": 81,
            "name": "FunctionDefinition",
            "src": "299:350:2"
          }
        ],
        "id": 82,
        "name": "ContractDefinition",
        "src": "66:585:2"
      }
    ],
    "id": 83,
    "name": "SourceUnit",
    "src": "33:619:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-26T15:59:02.014Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}